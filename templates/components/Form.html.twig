{% props form = null, multipart = false %}

<form{{ attributes.defaults({
    class: 'ui-form',
    method: form.vars.method|default('POST'),
    action: form.vars.action|default(false),
    enctype: form.vars.multipart|default(multipart) ? 'multipart/form-data' : false,
}) }}>
    {% block errors %}
        {# todo move to component #}
        {% if form.vars.errors|default([])|length %}
            {# todo use alert recipe #}
            <div class="flex items-center p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 dark:border-red-800" role="alert">
                <svg class="flex-shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
                </svg>
                <span class="sr-only">Info</span>
                <ul>
                    {% for error in form.vars.errors %}
                        <li>{{ error.message }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    {% endblock %}

    {% block content %}{% endblock %}

    {# render fields that haven't yet been rendered #}
    {% for field in form|default([])|filter(f => not f.rendered) %}
        <twig:Form:Row :field="field" />
    {% endfor %}
</form>
