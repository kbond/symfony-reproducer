{% props field = null, valid = false, error = false %}

{% set type = null %}

{# determine the type to use #}
{% for prefix in field.vars.block_prefixes|default([])|reverse %}
    {% if not type and prefix in [
        'choice',
        'textarea',
        'button',
        'submit',
        'hidden',
        'checkbox',
        'radio',
        'email',
        'file',
        'date',
        'datetime-local',
        'color',
        'month',
        'number',
        'password',
        'range',
        'tel',
        'time',
        'url',
        'week',
    ] %}
        {% set type = prefix %}
    {% endif %}
{% endfor %}

{% set type = type ?: 'text' %}
{% set compound = field.vars.compound|default(false) %}
{% set tag = compound ? 'fieldset' : 'div' %}
{% set error = error ?: field.vars.errors|default([])|length > 0 %}
{% set valid = valid ?: field.vars.submitted|default(false) and field.vars.valid|default(false) %}

<{{ tag }}{{ attributes.defaults({
    class: html_classes(
        'ui-form-row',
        type ? 'ui-form-row-'~type,
        {
            'is-valid': valid,
            'has-error': error,
        },
    ),
    hidden: 'hidden' == type,
}) }}>
    {% block content %}
        {% set label = field.vars.label ? field.vars.label : field.vars.name|humanize %}
        {% set help = field.vars.help|default %}

        {% block label %}
            {% if compound %}
                <legend class="ui-form-label">{{ label }}</legend>
            {% elseif type not in ['button', 'submit', 'hidden'] %}
                <twig:Form:Label :field="field">{{ label }}</twig:Form:Label>
            {% endif %}
        {% endblock %}

        {% block widget %}
            {% set widgetAttr = {
                id: field.vars.id|default(false),
                name: field.vars.full_name|default(false),
                disabled: field.vars.disabled|default(false),
                required: field.vars.required|default(false),
                'aria-describedby': help ? field.vars.id ~ '-help' : false,
            } %}

            {% if compound %}
                {% for child in field.children %}
                    <twig:Form:Row :field="child" />
                {% endfor %}
            {% elseif type == 'textarea' %}
                <twig:Form:Textarea :field="field" {{ ...widgetAttr }} />
            {% elseif type == 'choice' %}
                <twig:Form:Select :field="field" {{ ...widgetAttr }} />
            {% elseif type in ['button', 'submit'] %}
                <twig:Button :type="type" {{ ...widgetAttr }}>{{ label }}</twig:Button>
            {% else %}
                <twig:Form:Input :field="field" :type="type" {{ ...widgetAttr }} />
            {% endif %}
        {% endblock %}

        {% block errors %}
            {% if error %}
                <twig:Form:Errors :field="field" />
            {% endif %}
        {% endblock %}

        {% block help %}
            {% if help %}
                <twig:Form:Help :field="field" :value="help" />
            {% endif %}
        {% endblock %}
    {% endblock %}

    {% if field %}
        {% do field.setRendered %}
    {% endif %}
</{{ tag }}>
